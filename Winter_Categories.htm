<HTML>
<HEAD>
<TITLE>List of categories</TITLE>
</HEAD>
<BODY>
<CENTER>Version: <B></B>.</CENTER>
<CENTER>[ <A href=Winter_Functors.htm><B>Functors</B></A> | <A href=Winter_Categories.htm><B>Categories</B></A> | <A href=Winter_Types.htm><B>Metatypes</B></A> | <A href=AWL_Syntax.htm><B>Syntax</B></A> ]</CENTER>
<H2>List of categories
</H2>
<a name="_Constructor"></a>
<P><font face=Arial size=+1 color=#808080><B>Constructor</B></font></P>Redirect category:Constructor
<P>[Total <B>13</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_Button">Button</a></B>: <I>Create simple button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_CheckButton">CheckButton</a></B>: <I>Create check button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_ComboBox">ComboBox</a></B>: <I>Create combo box control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor">Editor</a></B>: <I>Create editor control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Fill">Fill</a></B>: <I>Create filled rectangle static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Frame">Frame</a></B>: <I>Create rectangular frame static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label">Label</a></B>: <I>Create text label static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister">Lister</a></B>: <I>Create lister control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu">Menu</a></B>: <I>Create window menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_RadioButton">RadioButton</a></B>: <I>Create radio button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller">Scroller</a></B>: <I>Create scroller control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_create_window">create_window</a></B>: <I>Create new window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_create">image_create</a></B>: <I>Create new image.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1731 -->

<HR />
<a name="_Controller"></a>
<P><font face=Arial size=+1 color=#808080><B>Controller</B></font></P>
<P><I>Controllers.</I></P>
<P>Getters/setters of widget properties.</P>
<P>[Total <B>28</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_Button_GetCheck">Button_GetCheck</a></B>: <I>Get button state.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_GetText">Button_GetText</a></B>: <I>Get button text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_SetCheck">Button_SetCheck</a></B>: <I>Set button state.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_SetText">Button_SetText</a></B>: <I>Set button text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_ComboBox_AddItem">ComboBox_AddItem</a></B>: <I>Combo box item add.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Copy">Editor_Copy</a></B>: <I>Editor "copy" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Cut">Editor_Cut</a></B>: <I>Editor "cut" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_GetContent">Editor_GetContent</a></B>: <I>Get editor buffer content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Paste">Editor_Paste</a></B>: <I>Editor "paste" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_SetContent">Editor_SetContent</a></B>: <I>Set editor buffer content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label_GetText">Label_GetText</a></B>: <I>Get label text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label_SetText">Label_SetText</a></B>: <I>Set label text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_AddItem">Lister_AddItem</a></B>: <I>Lister item add.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_Clear">Lister_Clear</a></B>: <I>Clear lister control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_DeleteItem">Lister_DeleteItem</a></B>: <I>Lister item delete.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetCurrent">Lister_GetCurrent</a></B>: <I>Lister current element index.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetItem">Lister_GetItem</a></B>: <I>Lister get item by index.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetTotal">Lister_GetTotal</a></B>: <I>Lister elements count.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_InsertItem">Lister_InsertItem</a></B>: <I>Lister item insert.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_LookupItem">Lister_LookupItem</a></B>: <I>Lister item lookup.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_SetCurrent">Lister_SetCurrent</a></B>: <I>Lister set current element.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddDiv">Menu_AddDiv</a></B>: <I>Add separator to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddItem">Menu_AddItem</a></B>: <I>Add item to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddPopup">Menu_AddPopup</a></B>: <I>Add submenu to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_GetPos">Scroller_GetPos</a></B>: <I>Get scroller position.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_GetRange">Scroller_GetRange</a></B>: <I>Get scroller range.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_SetPos">Scroller_SetPos</a></B>: <I>Set scroller position.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_SetRange">Scroller_SetRange</a></B>: <I>Set scroller range.</I></LI>
</UL>
<!-- ../src/winter/WinCtl.cpp:1211 -->

<HR />
<a name="_Debug"></a>
<P><font face=Arial size=+1 color=#808080><B>Debug</B></font></P>Redirect category:Debug
<P>[Total <B>0</B>]:</P>
<UL>
</UL>
<!-- ../src/winter/WinMsg.cpp:879 -->

<HR />
<a name="_Debug"></a>
<P><font face=Arial size=+1 color=#808080><B>Debug</B></font></P>Redirect category:Debug
<P>[Total <B>1</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_with_debug">with_debug</a></B>: <I>Graphic debugging wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1728 -->

<HR />
<a name="_Destructor"></a>
<P><font face=Arial size=+1 color=#808080><B>Destructor</B></font></P>Redirect category:Destructor
<P>[Total <B>2</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_destroy_window">destroy_window</a></B>: <I>Destroy window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_destroy">image_destroy</a></B>: <I>Destroy image.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1734 -->

<HR />
<a name="_Graphic"></a>
<P><font face=Arial size=+1 color=#808080><B>Graphic</B></font></P>
<P><I>Graphic functors</I></P>
<P>Functors, implementing standard graphic operations.</P>
<P>[Total <B>51</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_arc">arc</a></B>: <I>Plot elliptical arc.</I></LI>
<LI><B><a href="Winter_Functors.htm#_chord">chord</a></B>: <I>Plot & fill elliptical chord.</I></LI>
<LI><B><a href="Winter_Functors.htm#_clip_area">clip_area</a></B>: <I>Rectangular clipping wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_fill">fill</a></B>: <I>Fill rectangle area.</I></LI>
<LI><B><a href="Winter_Functors.htm#_fill_color">fill_color</a></B>: <I>Fill color setting wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_fill_disable">fill_disable</a></B>: <I>Fill disabling wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_bgcolor">font_bgcolor</a></B>: <I>Text background color wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_charset">font_charset</a></B>: <I>Font character set wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_face">font_face</a></B>: <I>Font face wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_fgcolor">font_fgcolor</a></B>: <I>Text foreground color wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_inverse">font_inverse</a></B>: <I>Text foreground/background inversion wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_italic">font_italic</a></B>: <I>Font italics mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_overstrike">font_overstrike</a></B>: <I>Font overstrike mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_size">font_size</a></B>: <I>Font size wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_underline">font_underline</a></B>: <I>Font underline mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_weight">font_weight</a></B>: <I>Font weight wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_width">font_width</a></B>: <I>Font width wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_frame3D">frame3D</a></B>: <I>Draw filled frame with pseudo-3D style.</I></LI>
<LI><B><a href="Winter_Functors.htm#_get_text_height">get_text_height</a></B>: <I>Get current text height metrics.</I></LI>
<LI><B><a href="Winter_Functors.htm#_get_text_org">get_text_org</a></B>: <I>Get current text origin.</I></LI>
<LI><B><a href="Winter_Functors.htm#_grid_extent">grid_extent</a></B>: <I>Calculate rectangular grid extent.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_blit">image_blit</a></B>: <I>Blit image region between image(s) and/or display area.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_create">image_create</a></B>: <I>Create new image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_load">image_data_load</a></B>: <I>Load pixel data from string to image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_save">image_data_save</a></B>: <I>Save pixel data from image to string.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_size">image_data_size</a></B>: <I>Calculate image size.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_destroy">image_destroy</a></B>: <I>Destroy image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_extent">image_extent</a></B>: <I>Get image extent.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_linxform">image_linxform</a></B>: <I>Linear transformation of image region between image(s) and/or display.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_stretch">image_stretch</a></B>: <I>Stretch image region between image(s) and/or display.</I></LI>
<LI><B><a href="Winter_Functors.htm#_is_active">is_active</a></B>: <I>Check for active graphic context.</I></LI>
<LI><B><a href="Winter_Functors.htm#_line">line</a></B>: <I>Plot single line.</I></LI>
<LI><B><a href="Winter_Functors.htm#_map_grid_point">map_grid_point</a></B>: <I>Map point to rectangular grid.</I></LI>
<LI><B><a href="Winter_Functors.htm#_map_grid_rect">map_grid_rect</a></B>: <I>Map rectangle to rectangular grid.</I></LI>
<LI><B><a href="Winter_Functors.htm#_oval">oval</a></B>: <I>Plot & fill oval (ellipse).</I></LI>
<LI><B><a href="Winter_Functors.htm#_pixel">pixel</a></B>: <I>Put pixel.</I></LI>
<LI><B><a href="Winter_Functors.htm#_pixel_fill">pixel_fill</a></B>: <I>Fill rectangle with calculated pixels.</I></LI>
<LI><B><a href="Winter_Functors.htm#_plot">plot</a></B>: <I>Plot single point.</I></LI>
<LI><B><a href="Winter_Functors.htm#_plot_color">plot_color</a></B>: <I>Plot color setting wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_plot_disable">plot_disable</a></B>: <I>Plot disabling wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_polygon">polygon</a></B>: <I>Plot & fill closed polygon.</I></LI>
<LI><B><a href="Winter_Functors.htm#_rect">rect</a></B>: <I>Plot & fill rectangle.</I></LI>
<LI><B><a href="Winter_Functors.htm#_round_rect">round_rect</a></B>: <I>Plot & fill rectangle with rounded corners.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text">text</a></B>: <I>Output text string.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text_box">text_box</a></B>: <I>Text box wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text_metrics">text_metrics</a></B>: <I>Text metrics wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text_org">text_org</a></B>: <I>Set current text origin.</I></LI>
<LI><B><a href="Winter_Functors.htm#_unichar">unichar</a></B>: <I>Output single character.</I></LI>
<LI><B><a href="Winter_Functors.htm#_wedge">wedge</a></B>: <I>Plot & fill elliptical wedge.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_debug">with_debug</a></B>: <I>Graphic debugging wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_image">with_image</a></B>: <I>Image output wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1718 -->

<HR />
<a name="_Image"></a>
<P><font face=Arial size=+1 color=#808080><B>Image</B></font></P>
<P><I>Image functors</I></P>
<P>Bitmap image operations.</P>
<P>[Total <B>10</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_image_blit">image_blit</a></B>: <I>Blit image region between image(s) and/or display area.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_create">image_create</a></B>: <I>Create new image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_load">image_data_load</a></B>: <I>Load pixel data from string to image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_save">image_data_save</a></B>: <I>Save pixel data from image to string.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_data_size">image_data_size</a></B>: <I>Calculate image size.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_destroy">image_destroy</a></B>: <I>Destroy image.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_extent">image_extent</a></B>: <I>Get image extent.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_linxform">image_linxform</a></B>: <I>Linear transformation of image region between image(s) and/or display.</I></LI>
<LI><B><a href="Winter_Functors.htm#_image_stretch">image_stretch</a></B>: <I>Stretch image region between image(s) and/or display.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_image">with_image</a></B>: <I>Image output wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:2122 -->

<HR />
<a name="_Internal"></a>
<P><font face=Arial size=+1 color=#808080><B>Internal</B></font></P>Redirect category:Internal
<P>[Total <B>15</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_alert_beep">alert_beep</a></B>: <I>Alert sound.</I></LI>
<LI><B><a href="Winter_Functors.htm#_alert_box">alert_box</a></B>: <I>Alert modal window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_caret_loc">caret_loc</a></B>: <I>Place/remove window caret.</I></LI>
<LI><B><a href="Winter_Functors.htm#_caret_shape">caret_shape</a></B>: <I>Enable/disable window caret.</I></LI>
<LI><B><a href="Winter_Functors.htm#_create_window">create_window</a></B>: <I>Create new window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_destroy_window">destroy_window</a></B>: <I>Destroy window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_message_loop">message_loop</a></B>: <I>Window session message loop.</I></LI>
<LI><B><a href="Winter_Functors.htm#_query_border">query_border</a></B>: <I>Get system window border.</I></LI>
<LI><B><a href="Winter_Functors.htm#_reloc_window">reloc_window</a></B>: <I>Set window location & extent.</I></LI>
<LI><B><a href="Winter_Functors.htm#_rename_window">rename_window</a></B>: <I>Set window caption.</I></LI>
<LI><B><a href="Winter_Functors.htm#_sleep">sleep</a></B>: <I>Sleep for a while.</I></LI>
<LI><B><a href="Winter_Functors.htm#_timer_control">timer_control</a></B>: <I>Enable, disable or change window timer.</I></LI>
<LI><B><a href="Winter_Functors.htm#_timer_info">timer_info</a></B>: <I>Get info about timer.</I></LI>
<LI><B><a href="Winter_Functors.htm#_windows_loop">windows_loop</a></B>: <I>Window iterator.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_window">with_window</a></B>: <I>Window output wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinMsg.cpp:876 -->

<HR />
<a name="_Predicate"></a>
<P><font face=Arial size=+1 color=#808080><B>Predicate</B></font></P>Redirect category:Predicate
<P>[Total <B>5</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_is_active">is_active</a></B>: <I>Check for active graphic context.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_eq">vec_eq</a></B>: <I>Vector equality.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_ne">vec_ne</a></B>: <I>Vector inequality.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_nz">vec_nz</a></B>: <I>Vector check for non-zero.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_z">vec_z</a></B>: <I>Vector check for zero.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1725 -->

<HR />
<a name="_Vector"></a>
<P><font face=Arial size=+1 color=#808080><B>Vector</B></font></P>
<P><I>Vector operations</I></P>
<P>Vector calculation functors.</P>
<P>[Total <B>8</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_vec_add">vec_add</a></B>: <I>Vector addition.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_eq">vec_eq</a></B>: <I>Vector equality.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_ne">vec_ne</a></B>: <I>Vector inequality.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_neg">vec_neg</a></B>: <I>Vector negation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_nz">vec_nz</a></B>: <I>Vector check for non-zero.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_scale">vec_scale</a></B>: <I>Vector scaling.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_sub">vec_sub</a></B>: <I>Vector subtraction.</I></LI>
<LI><B><a href="Winter_Functors.htm#_vec_z">vec_z</a></B>: <I>Vector check for zero.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:2238 -->

<HR />
<a name="_WinControl"></a>
<P><font face=Arial size=+1 color=#808080><B>WinControl</B></font></P>
<P><I>Windows controls.</I></P>
<P>Everything related to windows controls.</P>
<P>[Total <B>39</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_Button">Button</a></B>: <I>Create simple button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_GetCheck">Button_GetCheck</a></B>: <I>Get button state.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_GetText">Button_GetText</a></B>: <I>Get button text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_SetCheck">Button_SetCheck</a></B>: <I>Set button state.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Button_SetText">Button_SetText</a></B>: <I>Set button text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_CheckButton">CheckButton</a></B>: <I>Create check button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_ComboBox">ComboBox</a></B>: <I>Create combo box control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_ComboBox_AddItem">ComboBox_AddItem</a></B>: <I>Combo box item add.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor">Editor</a></B>: <I>Create editor control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Copy">Editor_Copy</a></B>: <I>Editor "copy" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Cut">Editor_Cut</a></B>: <I>Editor "cut" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_GetContent">Editor_GetContent</a></B>: <I>Get editor buffer content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_Paste">Editor_Paste</a></B>: <I>Editor "paste" operation.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Editor_SetContent">Editor_SetContent</a></B>: <I>Set editor buffer content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Fill">Fill</a></B>: <I>Create filled rectangle static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Frame">Frame</a></B>: <I>Create rectangular frame static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label">Label</a></B>: <I>Create text label static.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label_GetText">Label_GetText</a></B>: <I>Get label text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Label_SetText">Label_SetText</a></B>: <I>Set label text content.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister">Lister</a></B>: <I>Create lister control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_AddItem">Lister_AddItem</a></B>: <I>Lister item add.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_Clear">Lister_Clear</a></B>: <I>Clear lister control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_DeleteItem">Lister_DeleteItem</a></B>: <I>Lister item delete.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetCurrent">Lister_GetCurrent</a></B>: <I>Lister current element index.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetItem">Lister_GetItem</a></B>: <I>Lister get item by index.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_GetTotal">Lister_GetTotal</a></B>: <I>Lister elements count.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_InsertItem">Lister_InsertItem</a></B>: <I>Lister item insert.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_LookupItem">Lister_LookupItem</a></B>: <I>Lister item lookup.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Lister_SetCurrent">Lister_SetCurrent</a></B>: <I>Lister set current element.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu">Menu</a></B>: <I>Create window menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddDiv">Menu_AddDiv</a></B>: <I>Add separator to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddItem">Menu_AddItem</a></B>: <I>Add item to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Menu_AddPopup">Menu_AddPopup</a></B>: <I>Add submenu to menu.</I></LI>
<LI><B><a href="Winter_Functors.htm#_RadioButton">RadioButton</a></B>: <I>Create radio button control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller">Scroller</a></B>: <I>Create scroller control.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_GetPos">Scroller_GetPos</a></B>: <I>Get scroller position.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_GetRange">Scroller_GetRange</a></B>: <I>Get scroller range.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_SetPos">Scroller_SetPos</a></B>: <I>Set scroller position.</I></LI>
<LI><B><a href="Winter_Functors.htm#_Scroller_SetRange">Scroller_SetRange</a></B>: <I>Set scroller range.</I></LI>
</UL>
<!-- ../src/winter/WinCtl.cpp:1207 -->

<HR />
<a name="_Windows"></a>
<P><font face=Arial size=+1 color=#808080><B>Windows</B></font></P>
<P><I>Windows operations.</I></P>
<P>Operations on internal window references.</P>
<P>[Total <B>15</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_alert_beep">alert_beep</a></B>: <I>Alert sound.</I></LI>
<LI><B><a href="Winter_Functors.htm#_alert_box">alert_box</a></B>: <I>Alert modal window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_caret_loc">caret_loc</a></B>: <I>Place/remove window caret.</I></LI>
<LI><B><a href="Winter_Functors.htm#_caret_shape">caret_shape</a></B>: <I>Enable/disable window caret.</I></LI>
<LI><B><a href="Winter_Functors.htm#_create_window">create_window</a></B>: <I>Create new window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_destroy_window">destroy_window</a></B>: <I>Destroy window.</I></LI>
<LI><B><a href="Winter_Functors.htm#_message_loop">message_loop</a></B>: <I>Window session message loop.</I></LI>
<LI><B><a href="Winter_Functors.htm#_query_border">query_border</a></B>: <I>Get system window border.</I></LI>
<LI><B><a href="Winter_Functors.htm#_reloc_window">reloc_window</a></B>: <I>Set window location & extent.</I></LI>
<LI><B><a href="Winter_Functors.htm#_rename_window">rename_window</a></B>: <I>Set window caption.</I></LI>
<LI><B><a href="Winter_Functors.htm#_sleep">sleep</a></B>: <I>Sleep for a while.</I></LI>
<LI><B><a href="Winter_Functors.htm#_timer_control">timer_control</a></B>: <I>Enable, disable or change window timer.</I></LI>
<LI><B><a href="Winter_Functors.htm#_timer_info">timer_info</a></B>: <I>Get info about timer.</I></LI>
<LI><B><a href="Winter_Functors.htm#_windows_loop">windows_loop</a></B>: <I>Window iterator.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_window">with_window</a></B>: <I>Window output wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinMsg.cpp:869 -->

<HR />
<a name="_Wrapper"></a>
<P><font face=Arial size=+1 color=#808080><B>Wrapper</B></font></P>Redirect category:Wrapper
<P>[Total <B>21</B>]:</P>
<UL>
<LI><B><a href="Winter_Functors.htm#_clip_area">clip_area</a></B>: <I>Rectangular clipping wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_fill_color">fill_color</a></B>: <I>Fill color setting wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_fill_disable">fill_disable</a></B>: <I>Fill disabling wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_bgcolor">font_bgcolor</a></B>: <I>Text background color wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_charset">font_charset</a></B>: <I>Font character set wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_face">font_face</a></B>: <I>Font face wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_fgcolor">font_fgcolor</a></B>: <I>Text foreground color wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_inverse">font_inverse</a></B>: <I>Text foreground/background inversion wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_italic">font_italic</a></B>: <I>Font italics mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_overstrike">font_overstrike</a></B>: <I>Font overstrike mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_size">font_size</a></B>: <I>Font size wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_underline">font_underline</a></B>: <I>Font underline mode wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_weight">font_weight</a></B>: <I>Font weight wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_font_width">font_width</a></B>: <I>Font width wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_plot_color">plot_color</a></B>: <I>Plot color setting wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_plot_disable">plot_disable</a></B>: <I>Plot disabling wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text_box">text_box</a></B>: <I>Text box wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_text_metrics">text_metrics</a></B>: <I>Text metrics wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_debug">with_debug</a></B>: <I>Graphic debugging wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_image">with_image</a></B>: <I>Image output wrapper.</I></LI>
<LI><B><a href="Winter_Functors.htm#_with_window">with_window</a></B>: <I>Window output wrapper.</I></LI>
</UL>
<!-- ../src/winter/WinGfx.cpp:1722 -->

<HR />
<a name="_Wrapper"></a>
<P><font face=Arial size=+1 color=#808080><B>Wrapper</B></font></P>Redirect category:Wrapper
<P>[Total <B>0</B>]:</P>
<UL>
</UL>
<!-- ../src/winter/WinMsg.cpp:873 -->

<HR />
<P>Total categories: <B>14</B>.</P>
</BODY>
</HTML>